$screenBreakPoints: (
  'xs': 336px,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px
);
@function getScreenBreakSize($name) {
  @return map-get($screenBreakPoints, $name);
}
@mixin applyScreenBreakOff {
  @content;
  @media screen and (min-width: getScreenBreakSize('xs')) {
    &-sm,
    &-md,
    &-lg,
    &-xl {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('sm')) {
    &-md,
    &-lg,
    &-xl {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('md')) {
    &-lg,
    &-xl {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('lg')) {
    &-xl {
      @content;
    }
  }
}
@mixin applyScreenBreakOn {
  @media screen and (min-width: getScreenBreakSize('xs')) {
    &-xs {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('sm')) {
    &-xs,
    &-sm {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('md')) {
    &-xs,
    &-sm,
    &-md {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('lg')) {
    &-xs,
    &-sm,
    &-md,
    &-lg {
      @content;
    }
  }
  @media screen and (min-width: getScreenBreakSize('xl')) {
    &-xl {
      @content;
    }
  }
}

.display-grid {
  display: grid;
  grid-template-columns: minmax(0, 1fr);
  grid-gap: 1.5em;

  @for $cols from 1 through 12 {
    &.display-grid-#{$cols} {
      @include applyScreenBreakOn {
        grid-template-columns: repeat($cols, minmax(0, 1fr));
      }
    }
  }
}

.d-flex-row {
  display: flex;

  &--al-center {
    align-items: center;
  }
  @include applyScreenBreakOff {
    flex-direction: column;
  }
  @include applyScreenBreakOn {
    flex-direction: row;
    &.d-flex-row--al-center {
      align-items: unset;
    }
  }
}
.flex-1 {
  flex: 1;
}
@mixin addSpace($paddingLeft: 0, $paddingTop: 0) {
  &.d-flex-row > *:not(:first-child) {
    padding-left: 0;
    padding-top: $paddingTop;
  }
  @each $name, $size in $screenBreakPoints {
    @media screen and (min-width: $size) {
      &.d-flex-row-#{$name} > *:not(:first-child) {
        padding-left: $paddingLeft;
        padding-top: 0;
      }
    }
  }
}
@mixin applyMultiLineEllipsis($lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}
@mixin applyPureCssEllipsis($lines: 1, $lineHeight: 1.2em) {
  overflow: hidden;
  position: relative;
  line-height: 1.2em;
  max-height: $lineHeight * $lines;
  text-align: justify;
  margin-right: -1em;
  padding-right: 1em;
  &::before {
    content: '...';
    position: absolute;
    right: 0;
    bottom: 0;
  }
  &::after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    background-color: transparent;
  }
}
